// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id() @default(uuid())
  username  String     @unique
  password  String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  posts     Post[]
  likes     Like[]
  comments  Comment[]
  bookmarks Bookmark[]
}

model Post {
  id            String     @id() @default(uuid())
  title         String
  description   String?
  banner        String?
  content       String
  authorId      String
  author        User       @relation(fields: [authorId], references: [id])
  numberOfLikes Int        @default(0)
  likes         Like[]
  comments      Comment[]
  bookmarks     Bookmark[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  deleted Boolean @default(false)
}

model Like {
  id     String @id() @default(uuid())
  postId String
  userId String
  user   User   @relation(fields: [userId], references: [id])
  post   Post   @relation(fields: [postId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Comment {
  id     String @id() @default(uuid())
  text   String
  postId String
  userId String
  user   User   @relation(fields: [userId], references: [id])
  post   Post   @relation(fields: [postId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  deleted Boolean @default(false)
}

model Bookmark {
  id     String @id() @default(uuid())
  postId String
  userId String
  user   User   @relation(fields: [userId], references: [id])
  post   Post   @relation(fields: [postId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
